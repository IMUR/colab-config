---
- name: Tool Inventory Audit
  hosts: all
  gather_facts: yes
  vars:
    audit_output_dir: "/tmp/tool_inventory_{{ ansible_date_time.epoch }}"
    current_user: "{{ ansible_env.USER | default(ansible_user_id) }}"
    is_local_node: "{{ current_user == ansible_user }}"
    tools_to_check:
      critical:
        - ansible
        - tmux
        - jq
        - git
        - curl
        - wget
        - htop
      optional:
        - zsh
        - bash
        - fzf
        - rg
        - chezmoi
        - starship
        - atuin
        - uv
        - fd
        - fdfind
        - bat
        - batcat
        - dust
      ansible_suite:
        - ansible-playbook
        - ansible-galaxy
        - ansible-vault
        - ansible-lint

  tasks:
    - name: Create inventory output directory
      file:
        path: "{{ audit_output_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true

    - name: Check for critical tools
      command: which {{ item }}
      register: critical_tool_check
      failed_when: false
      loop: "{{ tools_to_check.critical }}"
      changed_when: false
      delegate_to: "{{ 'localhost' if is_local_node else inventory_hostname }}"
      connection: "{{ 'local' if is_local_node else 'ssh' }}"

    - name: Check for optional tools
      command: which {{ item }}
      register: optional_tool_check
      failed_when: false
      loop: "{{ tools_to_check.optional }}"
      changed_when: false
      delegate_to: "{{ 'localhost' if is_local_node else inventory_hostname }}"
      connection: "{{ 'local' if is_local_node else 'ssh' }}"

    - name: Check for Ansible suite tools
      command: which {{ item }}
      register: ansible_tool_check
      failed_when: false
      loop: "{{ tools_to_check.ansible_suite }}"
      changed_when: false
      delegate_to: "{{ 'localhost' if is_local_node else inventory_hostname }}"
      connection: "{{ 'local' if is_local_node else 'ssh' }}"

    - name: Generate tool inventory report
      copy:
        content: |
          {
            "node": "{{ inventory_hostname }}",
            "timestamp": "{{ ansible_date_time.iso8601 }}",
            "critical_tools": {
          {% for result in critical_tool_check.results %}
              "{{ result.item }}": {
                "present": {{ result.rc == 0 | lower }},
                "path": "{{ result.stdout if result.rc == 0 else 'not_found' }}"
              }{{ ',' if not loop.last else '' }}
          {% endfor %}
            },
            "optional_tools": {
          {% for result in optional_tool_check.results %}
              "{{ result.item }}": {
                "present": {{ result.rc == 0 | lower }},
                "path": "{{ result.stdout if result.rc == 0 else 'not_found' }}"
              }{{ ',' if not loop.last else '' }}
          {% endfor %}
            },
            "ansible_suite": {
          {% for result in ansible_tool_check.results %}
              "{{ result.item }}": {
                "present": {{ result.rc == 0 | lower }},
                "path": "{{ result.stdout if result.rc == 0 else 'not_found' }}"
              }{{ ',' if not loop.last else '' }}
          {% endfor %}
            }
          }
        dest: "{{ audit_output_dir }}/{{ inventory_hostname }}_tool_inventory.json"
      delegate_to: localhost

    - name: Display inventory completion
      debug:
        msg: "Tool inventory completed for {{ inventory_hostname }}. Results in {{ audit_output_dir }}/{{ inventory_hostname }}_tool_inventory.json"