---
# User Development Environment Configuration
# Purpose: Synchronize user development environment across cluster nodes
# Scope: User $HOME directory only - no sudo operations required

- name: Configure User Development Environment
  hosts: cluster_nodes
  become: no
  gather_facts: yes

  tasks:
    # ====================================================================
    # WORKSPACE STRUCTURE
    # ====================================================================

    - name: Create user development workspace structure
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop: "{{ workspace_directories }}"

    - name: Create workspace README
      copy:
        dest: "{{ development_workspace }}/README.md"
        content: |
          # {{ ansible_user }} Development Workspace

          **Node**: {{ inventory_hostname }} ({{ node_role }})
          **Capabilities**: {{ user_capabilities | join(', ') }}
          **Created**: {{ ansible_date_time.iso8601 }}

          ## Directory Structure

          - `projects/` - Active development projects
          - `tools/` - Custom tools and utilities
          - `scripts/` - Automation and helper scripts
          - `experiments/` - Experimental code and prototypes
          - `docs/` - Personal documentation and notes

          ## Node-Specific Focus
          {{ node_specific_configs[inventory_hostname].development_focus | default(['general']) | join(', ') }}

          ## Available Services
          {{ node_specific_configs[inventory_hostname].user_services | default(['basic']) | join(', ') }}
        mode: "0644"

    # ====================================================================
    # GIT CONFIGURATION
    # ====================================================================

    - name: Configure git user settings
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - { name: "user.name", value: "{{ git_user_name }}" }
        - { name: "user.email", value: "{{ git_user_email }}" }
        - { name: "init.defaultBranch", value: "{{ git_default_branch }}" }
        - { name: "core.editor", value: "{{ git_editor }}" }

    - name: Configure git aliases and preferences
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - { name: "alias.st", value: "status" }
        - { name: "alias.co", value: "checkout" }
        - { name: "alias.br", value: "branch" }
        - { name: "alias.ci", value: "commit" }
        - { name: "alias.unstage", value: "reset HEAD --" }
        - { name: "alias.last", value: "log -1 HEAD" }
        - { name: "alias.visual", value: "!gitk" }
        - { name: "color.ui", value: "auto" }
        - { name: "push.default", value: "simple" }
        - { name: "pull.rebase", value: "false" }

    - name: Configure git delta pager (if available)
      git_config:
        name: "core.pager"
        value: "delta"
        scope: global
      when: ansible_env.HAS_DELTA == "1"

    - name: Configure delta settings (if available)
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: global
      loop:
        - { name: "delta.navigate", value: "true" }
        - { name: "delta.light", value: "false" }
        - { name: "delta.syntax-theme", value: "Dracula" }
      when: ansible_env.HAS_DELTA == "1"

    # ====================================================================
    # SSH CONFIGURATION
    # ====================================================================

    - name: Ensure SSH directory exists
      file:
        path: "{{ user_home }}/.ssh"
        state: directory
        mode: "0700"

    - name: Configure SSH client settings
      blockinfile:
        path: "{{ user_home }}/.ssh/config"
        create: yes
        mode: "0600"
        block: |
          # Co-lab Cluster SSH Configuration
          # Generated by user ansible

          {% for node in groups['cluster_nodes'] %}
          Host {{ node }} {{ cluster_aliases[node] }}
              HostName {{ hostvars[node]['ansible_host'] }}
              User {{ ansible_user }}
              ServerAliveInterval {{ ssh_config.server_alive_interval }}
              TCPKeepAlive {{ ssh_config.tcp_keep_alive | lower }}
              ControlMaster {{ ssh_config.control_master }}
              ControlPath {{ ssh_config.control_path }}
              ControlPersist {{ ssh_config.control_persist }}

          {% endfor %}

          # Global SSH settings
          Host *
              ServerAliveInterval {{ ssh_config.server_alive_interval }}
              TCPKeepAlive {{ ssh_config.tcp_keep_alive | lower }}
        marker: "# {mark} USER ANSIBLE SSH CONFIG"

    # ====================================================================
    # DEVELOPMENT TOOLS CONFIGURATION
    # ====================================================================

    - name: Create tools directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ tools_directory }}"
        - "{{ config_directory }}"
        - "{{ user_home }}/.local/share"
        - "{{ user_home }}/.local/share/ansible"

    - name: Configure development environment scripts
      copy:
        dest: "{{ tools_directory }}/dev-env-status"
        content: |
          #!/bin/bash
          # Development Environment Status Check
          # Generated by user ansible

          echo "=== Development Environment Status: {{ inventory_hostname }} ==="
          echo "User: {{ ansible_user }}"
          echo "Node Role: {{ node_role }}"
          echo "Workspace: {{ development_workspace }}"
          echo

          echo "=== User Capabilities ==="
          {% for capability in user_capabilities %}
          echo "  ✓ {{ capability }}"
          {% endfor %}
          echo

          echo "=== Development Focus ==="
          {% for focus in node_specific_configs[inventory_hostname].development_focus | default(['general']) %}
          echo "  • {{ focus }}"
          {% endfor %}
          echo

          echo "=== Git Configuration ==="
          echo "  Name: $(git config user.name)"
          echo "  Email: $(git config user.email)"
          echo "  Editor: $(git config core.editor)"
          echo

          echo "=== SSH Configuration ==="
          if [[ -f ~/.ssh/config ]]; then
              echo "  ✓ SSH config present"
              echo "  Configured hosts: $(grep '^Host ' ~/.ssh/config | wc -l)"
          else
              echo "  ✗ SSH config missing"
          fi
          echo

          echo "=== Workspace Structure ==="
          if [[ -d "{{ development_workspace }}" ]]; then
              echo "  ✓ Workspace present: {{ development_workspace }}"
              ls -la "{{ development_workspace }}"
          else
              echo "  ✗ Workspace missing"
          fi
        mode: "0755"

    # ====================================================================
    # NODE-SPECIFIC USER CONFIGURATIONS
    # ====================================================================

    - name: Configure cooperator-specific user environment
      block:
        - name: Create web development tools directory
          file:
            path: "{{ development_workspace }}/tools/web-dev"
            state: directory
            mode: "0755"

        - name: Create cluster management scripts directory
          file:
            path: "{{ development_workspace }}/scripts/cluster-mgmt"
            state: directory
            mode: "0755"

        - name: Create gateway user profile
          copy:
            dest: "{{ development_workspace }}/docs/cooperator-profile.md"
            content: |
              # Cooperator (Gateway) User Profile

              **Role**: Cluster gateway and web development node
              **Services**: Web development, cluster management
              **Focus**: Frontend development, infrastructure management

              ## Available Tools
              - Web development frameworks
              - Cluster management utilities
              - Gateway service configurations

              ## Common Tasks
              - Web application development
              - Cluster monitoring and management
              - Service configuration and deployment
            mode: "0644"
      when: inventory_hostname == "cooperator"

    - name: Configure projector-specific user environment
      block:
        - name: Create GPU development workspace
          file:
            path: "{{ development_workspace }}/projects/gpu-dev"
            state: directory
            mode: "0755"

        - name: Create container development workspace
          file:
            path: "{{ development_workspace }}/projects/containers"
            state: directory
            mode: "0755"

        - name: Create compute node user profile
          copy:
            dest: "{{ development_workspace }}/docs/projector-profile.md"
            content: |
              # Projector (Compute) User Profile

              **Role**: High-performance computing and GPU development
              **Services**: GPU development, container development
              **Focus**: CUDA development, Docker containers, HPC

              ## Available Tools
              - GPU development frameworks (when installed)
              - Container orchestration tools
              - High-performance computing libraries

              ## Common Tasks
              - GPU-accelerated computing
              - Container development and deployment
              - Performance optimization and benchmarking
            mode: "0644"
      when: inventory_hostname == "projector"

    - name: Configure director-specific user environment
      block:
        - name: Create ML development workspace
          file:
            path: "{{ development_workspace }}/projects/ml-research"
            state: directory
            mode: "0755"

        - name: Create data science workspace
          file:
            path: "{{ development_workspace }}/projects/data-science"
            state: directory
            mode: "0755"

        - name: Create ML platform user profile
          copy:
            dest: "{{ development_workspace }}/docs/director-profile.md"
            content: |
              # Director (ML Platform) User Profile

              **Role**: Machine learning and data science platform
              **Services**: Jupyter development, ML research
              **Focus**: Machine learning, data science, research

              ## Available Tools
              - Jupyter Lab environment (when installed)
              - ML/AI frameworks and libraries
              - Data analysis and visualization tools

              ## Common Tasks
              - Machine learning model development
              - Data analysis and visualization
              - Research and experimentation
            mode: "0644"
      when: inventory_hostname == "director"

    # ====================================================================
    # VALIDATION AND REPORTING
    # ====================================================================

    - name: Create user environment validation script
      copy:
        dest: "{{ tools_directory }}/validate-user-environment"
        content: |
          #!/bin/bash
          # User Environment Validation Script
          # Generated by user ansible

          echo "=== User Environment Validation: {{ inventory_hostname }} ==="
          echo "Timestamp: $(date)"
          echo

          PASSED=0
          FAILED=0

          # Workspace structure
          echo "=== Workspace Structure ==="
          {% for dir in workspace_directories %}
          if [[ -d "{{ dir }}" ]]; then
              echo "  ✓ {{ dir }}"
              ((PASSED++))
          else
              echo "  ✗ {{ dir }}"
              ((FAILED++))
          fi
          {% endfor %}
          echo

          # Git configuration
          echo "=== Git Configuration ==="
          if git config user.name >/dev/null 2>&1; then
              echo "  ✓ Git user.name: $(git config user.name)"
              ((PASSED++))
          else
              echo "  ✗ Git user.name not set"
              ((FAILED++))
          fi

          if git config user.email >/dev/null 2>&1; then
              echo "  ✓ Git user.email: $(git config user.email)"
              ((PASSED++))
          else
              echo "  ✗ Git user.email not set"
              ((FAILED++))
          fi
          echo

          # SSH configuration
          echo "=== SSH Configuration ==="
          if [[ -f ~/.ssh/config ]]; then
              echo "  ✓ SSH config present"
              ((PASSED++))
          else
              echo "  ✗ SSH config missing"
              ((FAILED++))
          fi
          echo

          # Summary
          TOTAL=$((PASSED + FAILED))
          echo "=== Validation Summary ==="
          echo "  Passed: $PASSED"
          echo "  Failed: $FAILED"
          echo "  Total:  $TOTAL"

          if [[ $FAILED -eq 0 ]]; then
              echo "  Status: ✓ ALL CHECKS PASSED"
              exit 0
          else
              echo "  Status: ✗ Some checks failed"
              exit 1
          fi
        mode: "0755"

    - name: Run user environment validation
      command: "{{ tools_directory }}/validate-user-environment"
      register: user_validation
      failed_when: false
      changed_when: false

    - name: Display validation results
      debug:
        msg: |
          === User Environment Validation Results ===
          {{ user_validation.stdout }}

          {% if user_validation.rc == 0 %}
          ✓ User environment validation PASSED
          {% else %}
          ✗ User environment validation FAILED
          {% endif %}