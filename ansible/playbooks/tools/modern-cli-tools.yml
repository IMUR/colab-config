---
# Ansible Playbook: Install Modern CLI Tools
# Ensures all modern CLI tools are installed consistently across all nodes

- name: Install Modern CLI Tools on All Cluster Nodes
  hosts: all
  become: yes
  vars:
    tools_dir: "{{ ansible_env.HOME }}/.local/bin"

  tasks:
    # ====================================================================
    # APT PACKAGES (Available in Debian/Ubuntu repos)
    # ====================================================================

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install modern CLI tools via apt
      apt:
        name:
          - eza # Modern ls replacement
          - bat # cat with syntax highlighting (may be batcat)
          - fd-find # Modern find replacement (may be fdfind)
          - ripgrep # Fast grep replacement
          - fzf # Fuzzy finder
          - nnn # File manager
          - git-delta # Beautiful git diffs
          - zsh # Modern shell
        state: present

    # ====================================================================
    # RUST-BASED TOOLS (Install via cargo or direct download)
    # ====================================================================

    - name: Ensure ~/.local/bin exists
      file:
        path: "{{ tools_dir }}"
        state: directory
        mode: "0755"

    - name: Check if zoxide is installed
      command: which zoxide
      register: zoxide_check
      failed_when: false
      changed_when: false

    - name: Install zoxide (smart cd)
      shell: |
        curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
      when: zoxide_check.rc != 0

    - name: Check if dust is installed
      command: which dust
      register: dust_check
      failed_when: false
      changed_when: false

    - name: Download and install dust (visual du)
      block:
        - name: Download dust for x86_64
          get_url:
            url: "https://github.com/bootandy/dust/releases/download/v1.1.1/dust-v1.1.1-x86_64-unknown-linux-musl.tar.gz"
            dest: "/tmp/dust.tar.gz"
          when: ansible_architecture == "x86_64"

        - name: Download dust for arm64
          get_url:
            url: "https://github.com/bootandy/dust/releases/download/v1.1.1/dust-v1.1.1-aarch64-unknown-linux-musl.tar.gz"
            dest: "/tmp/dust.tar.gz"
          when: ansible_architecture == "aarch64"

        - name: Extract and install dust
          shell: |
            cd /tmp
            tar -xzf dust.tar.gz
            cp dust-*/dust {{ tools_dir }}/
            chmod +x {{ tools_dir }}/dust
            rm -rf dust-* dust.tar.gz
      when: dust_check.rc != 0

    - name: Check if starship is installed
      command: which starship
      register: starship_check
      failed_when: false
      changed_when: false

    - name: Install starship (beautiful prompt)
      shell: |
        curl -sS https://starship.rs/install.sh | sh -s -- -b {{ tools_dir }} --yes
      when: starship_check.rc != 0

    - name: Check if atuin is installed
      command: which atuin
      register: atuin_check
      failed_when: false
      changed_when: false

    - name: Install atuin (smart history)
      shell: |
        curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh -s -- --no-modify-path
        # Move from default location to ~/.local/bin for consistency
        if [ -f ~/.atuin/bin/atuin ]; then
          cp ~/.atuin/bin/atuin {{ tools_dir }}/
        fi
      when: atuin_check.rc != 0

    # ====================================================================
    # VERIFICATION
    # ====================================================================

    - name: Verify all tools are accessible
      command: "{{ item }}"
      register: tool_verification
      failed_when: false
      changed_when: false
      loop:
        - "eza --version"
        - "bat --version || batcat --version"
        - "fd --version || fdfind --version"
        - "rg --version"
        - "fzf --version"
        - "nnn -V"
        - "delta --version"
        - "zoxide --version"
        - "dust --version"
        - "starship --version"
        - "atuin --version"

    - name: Display verification results
      debug:
        msg: "Tool verification: {{ item.cmd }} - {{ 'OK' if item.rc == 0 else 'FAILED' }}"
      loop: "{{ tool_verification.results }}"

    # ====================================================================
    # CONFIGURATION FILES
    # ====================================================================

    - name: Ensure starship config directory exists
      file:
        path: "{{ ansible_env.HOME }}/.config"
        state: directory
        mode: "0755"

    - name: Create basic starship configuration
      copy:
        dest: "{{ ansible_env.HOME }}/.config/starship.toml"
        content: |
          # Starship Configuration for Co-lab Cluster

          [character]
          success_symbol = "[‚ûú](bold green)"
          error_symbol = "[‚ûú](bold red)"

          [directory]
          truncation_length = 3
          truncate_to_repo = false

          [git_branch]
          symbol = "üå± "

          [nodejs]
          symbol = "‚¨¢ "

          [rust]
          symbol = "ü¶Ä "

          [python]
          symbol = "üêç "

          [cmd_duration]
          min_time = 500
          format = "took [$duration](bold yellow)"
        mode: "0644"
        backup: yes
