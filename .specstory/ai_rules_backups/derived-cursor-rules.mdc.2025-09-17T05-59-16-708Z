
## HEADERS

This AI coding assistant rules file defines all project rules, coding standards, workflow guidelines, references, documentation structures, and best practices for the "colab-config" project. It is a living document that evolves with the project.

## PROJECT DESCRIPTION

The "colab-config" project aims to provide a comprehensive infrastructure configuration for a 3-node co-lab cluster (cooperator, projector, director) using a strategic hybrid approach.

## TECH STACK

- Ansible: For system-level infrastructure automation and configuration management.
- Chezmoi: For user-level dotfile management and configuration.
- Zsh: As the preferred shell environment.
- Git: For version control and collaboration.

## PROJECT STRUCTURE

```
colab-config/
‚îú‚îÄ‚îÄ üéØ omni-config/        # PRIMARY: User configurations (chezmoi)
‚îÇ   ‚îú‚îÄ‚îÄ dot_zshrc         # Modern shell configuration
‚îÇ   ‚îú‚îÄ‚îÄ dot_profile       # Universal profile + tool detection
‚îÇ   ‚îú‚îÄ‚îÄ dot_config/       # Tool configurations (starship, etc.)
‚îÇ   ‚îî‚îÄ‚îÄ tools/            # Tool-specific settings
‚îú‚îÄ‚îÄ üîß ansible/            # MINIMAL: System-level only
‚îÇ   ‚îú‚îÄ‚îÄ playbooks/        # Health checks, basic system setup
‚îÇ   ‚îú‚îÄ‚îÄ inventory/        # Node definitions
‚îÇ   ‚îî‚îÄ‚îÄ group_vars/       # Basic node grouping
‚îú‚îÄ‚îÄ üìö documentation/      # Comprehensive guides
‚îÇ   ‚îú‚îÄ‚îÄ architecture/     # System design
‚îÇ   ‚îú‚îÄ‚îÄ procedures/     # Deployment guides
‚îÇ   ‚îî‚îÄ‚îÄ AI-AGENT-*.md     # Agent-focused procedures
‚îú‚îÄ‚îÄ üõ†Ô∏è services/          # Optional service configs
‚îú‚îÄ‚îÄ üèóÔ∏è infrastructure/    # Supporting configurations
‚îî‚îÄ‚îÄ üìú scripts/           # Utility scripts
```

### Focus Areas:

- **üéØ omni-config/**: **Primary focus** - Rich user experience via chezmoi
- **üîß ansible/**: **Minimal usage** - Basic system preparation only
- **üìö documentation/**: **Comprehensive** - Clear deployment procedures

## CONFIGURATION MANAGEMENT

### Modern Hybrid Architecture

The project employs a hybrid configuration management strategy:

- **System-Level (Minimal Ansible)**:
    - Package installation and system services
    - Basic `/etc/profile.d/` environment setup
    - Health monitoring and system validation
    - Minimal, focused, low-risk operations only

- **User-Level (Pure Chezmoi)**:
    - Rich shell environments (`.zshrc`, `.profile`)
    - Modern CLI tools with smart detection
    - Cross-node consistency via templating
    - Node-specific customizations

### Universal User Experience

Deployed identically across all cluster nodes:

- ‚úÖ **Modern Shell**: ZSH with advanced features
- ‚úÖ **Tool Detection**: Smart fallbacks for missing tools
- ‚úÖ **Performance**: Optimized startup times
- ‚úÖ **Consistency**: Same experience on every node

### Node-Specific Templating

Chezmoi templates adapt automatically:

- **cooperator**: Gateway-specific aliases and paths
- **projector**: Multi-GPU development shortcuts
- **director**: ML workflow optimizations
- **Architecture-aware**: ARM64 vs x86_64 tool handling

## WORKFLOW & RELEASE RULES

1.  Create feature branches for new development.
2.  Test changes thoroughly before merging.
3.  Write clear and descriptive commit messages.
4.  Use pull requests for code review.
5.  All dangerous Ansible playbooks (e.g., `uid-standardization.yml`, `tool-standardization.yml`, `system-update.yml`) must be deleted immediately.
6. The project is currently operating in the 'backup' branch until key issues are resolved.
7.  `@AI-AGENT-DEPLOYMENT-GUIDE.md` should be deleted immediately.
8.  `/home/snitcher/Projects/colab-config/documentation/architecture/@README.md` should be renamed to `COLAB-CLUSTER-ARCHITECTURE.md`.
9. A new `/home/snitcher/Projects/colab-config/documentation/architecture/@README.md` should be created that contains a simple index.
10. Only changes to the current branch (backup) of the colab-config repo are permitted until further notice.
11. Acquire objective knowledge when assumptions could cause issues.
12. Don't loose sight of big-picture goals when approaching tasks or sub-tasks.
13. All dangerous Ansible playbooks (e.g., `uid-standardization.yml`, `tool-standardization.yml`, `system-update.yml`) must be deleted immediately.

## CODING STANDARDS

1.  Adhere to best practices for Ansible and Chezmoi.
2.  Write idempotent Ansible playbooks.
3.  Use templates for configuration files.
4.  Document all code and configurations.

## DEBUGGING

1.  Test configuration changes on the `director` node first.
2.  Validate changes using appropriate testing commands.
3.  Check system logs for errors.
4.  Use `chezmoi diff` to preview changes before applying.

## PROJECT DOCUMENTATION & CONTEXT SYSTEM

### Key Documents:

-   `README.md`: Project overview and quick start guide.
-   `documentation/architecture/COLAB-CLUSTER-ARCHITECTURE.md`: System architecture and design decisions.
-   `AI-AGENT-QUICKSTART.md`: Quick start guide for AI agents on snitcher.
-   `CLAUDE.md`: Repository guidelines for Claude.

### AI Agent Integration

-   **20-minute Assessment**: Use updated `AI-AGENT-QUICKSTART.md` for hybrid deployment
-   Comprehensive Guide**: Follow `documentation/procedures/AI-AGENT-DEPLOYMENT-GUIDE.md` (REMOVED: Replaced by enhanced Quickstart guide)
-   Modern Approach**: Hybrid strategy - minimal ansible + pure chezmoi
-   Low Risk**: User-level changes only, SSH access preserved

### Deployment Confidence

-   ‚úÖ **Low Risk**: User-level configurations only
-   ‚úÖ **Fast Recovery**: Simple chezmoi rollback vs complex system restore
-   ‚úÖ **Proven Approach**: Following established best practices
-   ‚úÖ **Minimal Dependencies**: No complex ansible orchestration required

### Documentation Philosophy

-   Keep documentation up-to-date with code changes.
-   Provide clear and concise instructions.
-   Document the reasoning behind design decisions.

### Renaming and Repurposing
The following actions must be taken:
1.  `documentation/procedures/AI-AGENT-DEPLOYMENT-GUIDE.md` should be deleted immediately.
2.  `/home/snitcher/Projects/colab-config/documentation/architecture/@README.md` should be renamed to `COLAB-CLUSTER-ARCHITECTURE.md`.
3.  A new `/home/snitcher/Projects/colab-config/documentation/architecture/@README.md` should be created that contains a simple index.

## SECURITY

1.  Follow security best practices for Ansible and Chezmoi.
2.  Protect sensitive data using appropriate methods.
3.  Regularly audit configurations for security vulnerabilities.
4.  Minimize the use of `curl | sh` patterns; verify the integrity of downloaded scripts.

## TROUBLESHOOTING

### Emergency Procedures

```bash
# Configuration rollback (primary method)
for node in crtr prtr drtr; do
    ssh "$node" "
        # Simple chezmoi rollback
        chezmoi forget --force
        chezmoi init --source /cluster-nas/configs/colab-omni-config-backup
        
        # Or restore from local backup
        [[ -f ~/.zshrc.backup ]] && mv ~/.zshrc.backup ~/.zshrc
        
        echo '$node rolled back'
    "
done
```

### General Tips
When troubleshooting, consider the following:

*   User-level only: Configuration errors won't break SSH access
*   Fast rollback: Chezmoi revert vs complex system restoration
*   Simple validation: `source ~/.zshrc` test vs full system checks
*   Isolated impact: Shell configs don't affect critical services

## DEPRECATED

-   Symlink-based configuration deployment is deprecated. Migrate to Chezmoi-based deployment.

## OPEN ISSUES & FUTURE ENHANCEMENTS

-   Implement system-wide environment configuration via `/etc/profile.d/`.
-   Automate health monitoring and alerting.
-   Enhance backup strategies.
-   Optimize performance.