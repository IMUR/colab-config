---
# Unified Cluster Deployment Playbook
# Orchestrates all node roles with evolution support

- name: Cluster Infrastructure Deployment
  hosts: localhost
  gather_facts: no
  vars:
    deployment_phase: basic
    
  tasks:
    - name: Cluster deployment started
      debug:
        msg: |
          Starting cluster deployment
          Phase: {{ deployment_phase }}
          Target nodes: {{ groups['all'] | length }}
      tags: [always]

# Phase 1: Edge Services (Foundation)
- import_playbook: roles/edge_services.yml
  tags: [edge_services, foundation]

# Phase 2: Core Compute Nodes  
- import_playbook: roles/power_compute.yml
  tags: [power_compute, compute]

- import_playbook: roles/dedicated_ml.yml
  tags: [dedicated_ml, compute]

# Phase 3: Access and Monitoring
- import_playbook: roles/mobile_access.yml
  tags: [mobile_access, monitoring]

# Post-deployment validation
- name: Cluster Validation and Summary
  hosts: all
  gather_facts: yes
  tasks:
    - name: Collect node status
      shell: |
        echo "Node: {{ inventory_hostname }}"
        echo "Role: {{ node_role }}"
        echo "Hardware: {{ hardware_profile }}"
        echo "Status: $(systemctl is-system-running)"
        echo "Load: $(uptime | awk '{print $NF}')"
      register: node_summary
      changed_when: false
      tags: [validation]
      
    - name: Generate cluster report
      debug:
        msg: "{{ node_summary.stdout_lines }}"
      tags: [validation]

- name: Cluster Deployment Complete
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Deployment summary
      debug:
        msg: |
          Cluster deployment complete!
          
          Next steps:
          1. Test inter-node connectivity
          2. Deploy specific AI/ML services  
          3. Configure monitoring and alerting
          4. Set up backup procedures
          
          Run validation:
          ansible-playbook cluster-deploy.yml --tags validation
      tags: [always]