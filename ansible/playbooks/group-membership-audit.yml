---
- name: Cluster Group Membership Audit
  hosts: all
  gather_facts: yes
  vars:
    audit_output_dir: "/tmp/group_audit_{{ ansible_date_time.epoch }}"
    expected_cluster_gid: 2000
    current_user: "{{ ansible_env.USER | default(ansible_user_id) }}"
    is_local_node: "{{ current_user == ansible_user }}"

  tasks:
    - name: Create group audit output directory
      file:
        path: "{{ audit_output_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true

    - name: Check if cluster group exists
      command: getent group cluster
      register: cluster_group_check
      failed_when: false
      changed_when: false
      delegate_to: "{{ 'localhost' if is_local_node else inventory_hostname }}"
      connection: "{{ 'local' if is_local_node else 'ssh' }}"

    - name: Get cluster group details
      shell: getent group cluster | cut -d: -f3,4
      register: cluster_group_details
      when: cluster_group_check.rc == 0
      changed_when: false

    - name: Check current user's group membership
      command: groups {{ ansible_user }}
      register: user_groups
      changed_when: false

    - name: Check all users in cluster group
      shell: getent group cluster | cut -d: -f4
      register: cluster_group_members
      when: cluster_group_check.rc == 0
      changed_when: false

    - name: Get all group information for user
      command: id {{ ansible_user }}
      register: user_id_info
      changed_when: false

    - name: Generate group membership report
      copy:
        content: |
          {
            "node": "{{ inventory_hostname }}",
            "timestamp": "{{ ansible_date_time.iso8601 }}",
            "cluster_group": {
              "exists": {{ cluster_group_check.rc == 0 | lower }},
              "gid": {{ cluster_group_details.stdout.split(':')[0] | default('null') }},
              "expected_gid": {{ expected_cluster_gid }},
              "gid_matches_expected": {{ (cluster_group_details.stdout.split(':')[0] | default('0') | int) == expected_cluster_gid | lower }},
              "members": "{{ cluster_group_details.stdout.split(':')[1] | default('') }}"
            },
            "user_membership": {
              "ansible_user": "{{ ansible_user }}",
              "all_groups": "{{ user_groups.stdout }}",
              "in_cluster_group": {{ 'cluster' in user_groups.stdout | lower }},
              "user_id_details": "{{ user_id_info.stdout }}"
            },
            "compliance": {
              "cluster_group_properly_configured": {{ (cluster_group_check.rc == 0 and (cluster_group_details.stdout.split(':')[0] | default('0') | int) == expected_cluster_gid) | lower }},
              "user_has_cluster_access": {{ 'cluster' in user_groups.stdout | lower }},
              "standardization_compliant": {{ (cluster_group_check.rc == 0 and 'cluster' in user_groups.stdout and (cluster_group_details.stdout.split(':')[0] | default('0') | int) == expected_cluster_gid) | lower }}
            }
          }
        dest: "{{ audit_output_dir }}/{{ inventory_hostname }}_group_membership.json"
      delegate_to: localhost

    - name: Display group audit results
      debug:
        msg: |
          Group membership audit for {{ inventory_hostname }}:
          - Cluster group exists: {{ cluster_group_check.rc == 0 }}
          - User {{ ansible_user }} in cluster group: {{ 'cluster' in user_groups.stdout }}
          - Results saved to: {{ audit_output_dir }}/{{ inventory_hostname }}_group_membership.json