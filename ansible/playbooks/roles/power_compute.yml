---
# Power Compute Role - Burst workloads and multi-GPU compute (prtr)
# Modular design for evolving compute needs

- name: Power Compute Configuration
  hosts: power_compute
  become: yes
  vars:
    # Core compute services - extend as workloads grow
    container_runtime: docker
    gpu_services:
      - nvidia-container-toolkit
    
    # Placeholder for service expansion
    compute_services: []
    
  tasks:
    - name: Gather system facts
      setup:
        gather_subset:
          - hardware
          - processor
      tags: [always]
      
    - name: Validate compute hardware
      assert:
        that:
          - ansible_processor_count >= 8
          - ansible_memtotal_mb >= 65536
        msg: "Insufficient resources for power compute role"
      tags: [validation]
    
    # GPU detection and management
    - name: Check NVIDIA GPU availability
      command: nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits
      register: gpu_info
      failed_when: false
      changed_when: false
      tags: [gpu_detection]
      
    - name: Report GPU configuration
      debug:
        msg: "Detected GPUs: {{ gpu_info.stdout_lines | default(['No NVIDIA GPUs found']) }}"
      tags: [gpu_detection]
    
    # Container runtime setup
    - name: Ensure container runtime
      block:
        - name: Check if Docker is installed
          command: docker --version
          register: docker_check
          failed_when: false
          changed_when: false
          
        - name: Docker status
          systemd:
            name: docker
            state: started
            enabled: yes
          when: docker_check.rc == 0
          
        - name: Add user to docker group
          user:
            name: "{{ ansible_user }}"
            groups: docker
            append: yes
          when: docker_check.rc == 0
          
      tags: [containers]
    
    # Storage optimization for compute workloads
    - name: Setup local compute cache
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      loop:
        - /local-cache
        - /local-cache/models
        - /local-cache/datasets
        - /local-cache/results
        - /local-cache/scratch
      tags: [storage]
    
    # Cluster NAS mount
    - name: Mount cluster storage
      mount:
        path: /cluster-nas
        src: "192.168.254.10:/cluster-nas"
        fstype: nfs4
        opts: "rsize=1048576,wsize=1048576,hard,intr"
        state: mounted
      tags: [storage]
    
    # Health monitoring
    - name: System resource check
      shell: |
        echo "CPU: $(nproc) cores"
        echo "RAM: $(free -h | awk '/^Mem:/ {print $2}')"
        echo "GPU: $(nvidia-smi -L 2>/dev/null | wc -l) GPUs"
        echo "Storage: $(df -h /local-cache | tail -1 | awk '{print $4}') available"
      register: resource_summary
      changed_when: false
      tags: [health_check]
      
    - name: Report system capabilities
      debug:
        msg: "{{ resource_summary.stdout_lines }}"
      tags: [health_check]
    
    # Placeholder for AI/ML service deployment
    - name: Prepare for AI services
      debug:
        msg: "Power compute node ready for AI/ML workload deployment"
      tags: [ai_prep]